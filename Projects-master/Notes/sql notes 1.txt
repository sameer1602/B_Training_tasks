	
	create table directors(
	director_id SERIAL PRIMARY key,
		first_name varchar(30),
		last_name varchar(30),
		date_of_birth DATE,
		nationality varchar(20)
	);
	
	select * FROM directors;
	



	create table actors(
	actor_id serial primary key,
	first_name varchar(30),
	last_name varchar(30),
	gender char(1),
	date_of_birth date	
	);
	
	select * from actors;




	create table movies(
	movie_id serial primary key,
	movie_name varchar(50) not null,
	movie_length int,	
	movie_lang varchar(20),
	release_date date,
	age_certificate varchar(5),
	director_id int references directors (director_id)	
	);
	
	select * from movies;



	create table movie_revenues(
	revenue_id serial primary key,
	movie_id int references movies (movie_id),
	domestic_tankings numeric(6,2),
		international_takings numeric(6,2)
	);
	
	select * from movie_revenues;
	
	
	
	create table movie_actors(
	movie_id int references movies(movie_id),
	actor_id int references actors(actor_id),
	primary key (movie_id,actor_id)	
	);
	
	select * from movie_actors;



	



       //modify table

	create table examples(
	    example_id serial primary key,
		first_name varchar(30),
		last_name varchar(30)
	);
	
	select * from examples; 
	
	--add coloumn
	alter table examples add column email varchar(50 ) unique;
	
	alter table examples add column nationality varchar(30), add column age int not null;
	alter table examples alter column first_name type varchar(50);





	--insert data
	insert into examples (first_name, last_name, email, nationality, age)
	values ('David','Mitchell','dmitch@gmail.com','GBR',23);
	
	insert into examples (first_name, last_name, email, nationality, age)
	values ('Emily','Watson','emiitch@gmail.com','Scott',35),
	('Sumant','Mulgaonkar','summul@gmail.com','Indian',21);
	
	
	Select *  from examples;



 	--update data
	
	update examples 
	set email='david@gmail.com', age=44
	where example_id = 1;
	Select *  from examples;



	--detele data
	delete from examples
	where example_id = 1;
	
	Select *  from examples;






select * from movie_revenues


	
select first_name, last_name from directors;

select * from movies where age_certificate = '15' AND movie_lang = 'Chinese';

select * from movies where movie_lang ='English' AND age_certificate ='15' AND director_id=27;

select  movie_name , movie_length from movies where movie_length >= 120;

select * from movies where release_date < '1999-12-31';

select first_name , last_name from actors where first_name Not IN ('Bruce', 'John', 'Peter');

select * from  actors where first_name like '%r';

select movie_name, movie_lang from movies where movie_lang between 'E' and 'P';

select actor_id , first_name , date_of_birth from actors order by date_of_birth ;

select * from movie_revenues order by revenue_id limit 8 offset 2;

select movie_id , movie_name from movies offset 8 rows fetch first 5 row only;

select distinct movie_lang from movies order by movie_lang;

select * from movie_revenues where domestic_tankings is Not null 
order by domestic_tankings desc;


Select last_name as surname from directors;

Select CONCAT(first_name, ' ', last_name) AS full_name from actors;



//aggregate functions 

	select count (*) from movies where movie_lang ='English';
	select count(international_takings) from  movie_revenues;
	
	select sum(domestic_tankings) from movie_revenues where domestic_tankings > 100.0;
	select sum(movie_length) from movies where movie_lang = 'Chinese';
	
	select max(movie_length) from movies;
	select min(movie_length) from movies;
	select min(movie_length) from  movies where movie_lang = 'Japanese';
	
	
	select avg(movie_length) from movies where age_certificate = '18';
	
	Select movie_lang , AVG(movie_length) from movies group by movie_lang;
	
	select movie_lang, age_certificate, avg(movie_length) from movies group by movie_lang, age_certificate;
	
	select movie_lang , count(movie_lang) from movies group by movie_lang having count(movie_lang) > 1;
	select movie_lang , count(movie_lang) from movies
	where movie_length > 120
	group by movie_lang having count(movie_lang) > 1;
	
	select 5 + 6 as addition;
	select 35/3 as division;
	
	select movie_id , (domestic_tankings * international_takings) as total_takings from movie_revenues;
	
	select * from movie_revenues;
	